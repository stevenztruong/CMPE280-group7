---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Sample API"
basePath: "/"
tags:
  - name: "developer"
    description: "Operations about developer"
paths:
  /developers/:
    get:
      tags:
      - "developers"
      summary: "Returns the list of all developers"
      operationId: "getDevelopers"
      parameters: []
      responses:
        200:
          description: "Successful response"
      x-swagger-router-controller: "developer"
    post:
      tags:
      - "developers"
      summary: "Add a new developer"
      operationId: "addDeveloper"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New developer object"
        required: true
        schema:
          $ref: "#/definitions/Developer"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Validation exception"
        409:
          description: "Developer with this id already exists"
      x-swagger-router-controller: "developer"
  /developers/{id}:
    get:
      tags:
      - "developers"
      summary: "Finds developers by id"
      operationId: "getDevelopersByID"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of developer that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
        404:
          description: "No developer found"
      x-swagger-router-controller: "developer"
    delete:
      tags:
      - "developers"
      summary: "Delete developer by id"
      operationId: "deleteDeveloper"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of developer that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "No developer found"
      x-swagger-router-controller: "developer"
    put:
      tags:
      - "developers"
      summary: "Update developer's information"
      operationId: "updateDeveloperByID"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of developer that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated developer object"
        required: true
        schema:
          $ref: "#/definitions/DeveloperWithoutID"
      responses:
        200:
          description: "Successful operation"
        400:
           description: "Validation exception"
        404:
          description: "No developer found"
      x-swagger-router-controller: "developer"
  /developers/findByFirstName/{firstName}:
    get:
      tags:
      - "developers"
      summary: "Finds developers by first name"
      operationId: "getDevelopersByFName"
      parameters:
      - name: "firstName"
        in: "path"
        description: "First name of developer that need to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
        404:
          description: "No developer found"
      x-swagger-router-controller: "developer"
  /developers/findByLastName/{lastName}:
    get:
      tags:
      - "developers"
      summary: "Finds developers by last name"
      operationId: "getDevelopersByLName"
      parameters:
      - name: "lastName"
        in: "path"
        description: "Last name of developers that need to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
        404:
          description: "No developer found"
      x-swagger-router-controller: "developer"
definitions:
  Developer:
    required:
      - "id"
      - "firstName"
      - "lastName"
    properties:
      id:
        type: "string"
        minLength: 1
        description: "A unique identifier for each developer"
      firstName:
        type: "string"
        minLength: 1
        description: "Developer's first name"
      lastName:
        type: "string"
        minLength: 1
        description: "Developer's last name"
  DeveloperWithoutID:
    required:
      - "firstName"
      - "lastName"
    properties:
      firstName:
        type: "string"
        minLength: 1
        description: "Developer's first name"
      lastName:
        type: "string"
        minLength: 1
        description: "Developer's last name"
